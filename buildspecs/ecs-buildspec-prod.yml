version: 0.2

env:
  variables:
    STAGE: production
    REPOSITORY_NAME: project/repo-name
    SERVICE_IMAGE_NAME: service-image-name

phases:
  install:
    runtime-versions:
      docker: 18
      nodejs: 10
    commands:
      - docker version
      - node --version
      - aws --version
      - echo Install completed on `date`

  pre_build:
    commands:
      - ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)

  build:
    commands:
      - echo Build started on `date`
      - docker build -t $REPOSITORY_URI:latest --build-arg environment=$STAGE .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Build completed on `date`

  post_build:
    commands:
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $SERVICE_IMAGE_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
    files: imagedefinitions.json
